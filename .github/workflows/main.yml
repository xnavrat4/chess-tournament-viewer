name: Windows Release

on:
  push:
    tags:
      - 'v*'

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.2.0
  ARTIFACT:     chess-tournament-viewer.zip

jobs:
  build:
    runs-on:  windows-2019
    permissions: write-all
    steps:
      - name: (1) Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: (2) Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f
          
      - name: (3) Install Qt
        uses: jurplel/install-qt-action@v3.3.0
        with:
          dir:          ${{ runner.temp }}
          version:      ${{ env.QT_VERSION }}
          host:         windows
          arch:         win64_msvc2019_64
          modules:      all
          setup-python: false
          tools:   tools_ifw tools_qtcreator,qt.tools.qtcreator

      - name: (4) Download JOM
        uses: suisei-cn/actions-download-file@v1
        with:
          url:    http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\

      - name: (5) Unzip JOM
        working-directory: ${{ runner.temp }}
        run:  |
              7z x jom.zip -ojom
              
      - name: (6) Create directories
        run: |  
             mkdir ${{ runner.temp }}\build
             mkdir ${{ runner.temp }}\release
             mkdir ${{ runner.temp }}\install

      - name: (7) Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: (8) Build
        working-directory: ${{ runner.temp }}\build
        run:  |
              qmake -r ${{ env.SOURCE_DIR }}\UltraWide.pro
              ${{ runner.temp }}\jom\jom -j2
              copy release\UltraWide.exe ${{ runner.temp }}\release 
              cd ${{ runner.temp }}\release
              windeployqt --qmldir ${{ env.SOURCE_DIR }} UltraWide.exe --release --compiler-runtime
              copy C:\Windows\System32\concrt140.dll . 
              copy C:\Windows\System32\vccorlib140.dll .
              copy C:\Windows\System32\msvcp140.dll .
              copy C:\Windows\System32\vcruntime140.dll .
              cd ${{ runner.temp }}
              
      - name: (9) Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
          
      - name: (10) Zip application folder
        working-directory: ${{ runner.temp }}
        run:  |
              7z a chess-tournament-viewer.zip ${{ runner.temp }}\release\* -r

      - name: (11) Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: |
             ${{ runner.temp }}\chess-tournament-viewer.zip

      - name: (12) Upload release zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}\chess-tournament-viewer.zip
          asset_name: chess-tournament-viewer.zip
          asset_content_type: application/gzip
